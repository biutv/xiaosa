name: TVBox File Updater
on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时检查一次更新
  workflow_dispatch:        # 允许手动触发

jobs:
  update-tvbox-files:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史记录，便于提交
    
    - name: Check for updates
      id: check-update
      run: |
        # 简化变量定义
        API_URL="https://gitee.com/api/v5/repos/PizazzXS/another-d/contents/%E5%8D%95%E7%BA%BF%E8%B7%AF.zip"
        
        # 获取最新文件信息
        file_info=$(curl -s "$API_URL")
        new_sha=$(echo "$file_info" | jq -r '.sha')
        download_url=$(echo "$file_info" | jq -r '.download_url')
        
        # 检查API响应
        if [ -z "$new_sha" ] || [ "$new_sha" = "null" ]; then
          echo "::error::无法获取文件信息"
          exit 1
        fi
        
        # 检查当前版本（使用仓库内的版本文件）
        current_sha=""
        if [ -f "xs_version.txt" ]; then
          current_sha=$(cat "xs_version.txt")
        fi
        
        # 输出简洁的版本信息
        echo "当前版本: ${current_sha:0:7}... (完整SHA: $current_sha)"
        echo "最新版本: ${new_sha:0:7}... (完整SHA: $new_sha)"
        
        # 设置输出变量
        if [ "$current_sha" != "$new_sha" ]; then
          echo "::notice::检测到新版本可用"
          echo "download_url=$download_url" >> $GITHUB_OUTPUT
          echo "new_sha=$new_sha" >> $GITHUB_OUTPUT
          echo "update_available=true" >> $GITHUB_OUTPUT
        else
          echo "::notice::当前已是最新版本"
          echo "update_available=false" >> $GITHUB_OUTPUT
        fi

    - name: Download and extract update
      if: steps.check-update.outputs.update_available == 'true'
      run: |
        # 强制覆盖下载zip文件
        echo "正在下载更新..."
        curl -L -o "xs.zip" "${{ steps.check-update.outputs.download_url }}"
        
        # 检查文件有效性
        if [ ! -s "xs.zip" ]; then
          echo "::error::下载的文件为空！"
          exit 1
        fi
        
        # 强制解压并覆盖所有文件
        echo "正在强制解压覆盖文件..."
        unzip -o -q "xs.zip" -d .  # -o 覆盖不提示 -q 静默模式
        
        # 更新版本记录
        echo "${{ steps.check-update.outputs.new_sha }}" > "xs_version.txt"
        
        echo "::notice::更新完成！文件已强制覆盖，xs.zip已保留"

    - name: Commit changes
      if: steps.check-update.outputs.update_available == 'true'
      run: |
        # 显式添加所有更改文件（包括zip文件）
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add xs.zip          # 显式添加zip文件
        git add .               # 添加其他所有文件
        git status              # 显示状态以确认包含zip文件
        git commit -m "自动更新TVBox文件 (${{ steps.check-update.outputs.new_sha }})"
        git push
